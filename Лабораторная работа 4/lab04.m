A = [2, 1, 1, 1;
    2, 2, 2, 3;
    2, 2, 3, 4;
    2, 2, 3, 5];

b = [2; 1; 0; -1];

X = inv(A) * b; %получаем обратную матрицу
x = gauss(A, b)


function x = gauss(A, b)
n = size(A, 1); %вычисляем кол-во строк в матрице
A = [A b]; %добавляем столбец свободных членов

for i = 1:n-1 %цикл осуществляет "перестановку" строк местами
    [~, pivot] = max(abs(A(i:n,i)));
    pivot = pivot + i - 1;

    if pivot ~= i   %проверка нужно ли менять строку местами 
        A([i pivot],:) = A([pivot i],:); %перестановка строк в матрице A
    end

    
    for j = i+1:n
        factor = A(j,i) / A(i,i); %коэффицент для обнуления
        A(j,i:n+1) = A(j,i:n+1) - factor * A(i,i:n+1); %нули под главной диагональю
    end
end

x = zeros(n,1);
for i = n:-1:1
    x(i) = (A(i,n+1) - A(i,i+1:n)*x(i+1:n)) / A(i,i);
end
end
